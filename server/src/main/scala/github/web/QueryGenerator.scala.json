[
  {
    "prId" : 13,
    "comments" : [
      {
        "author" : {
          "login" : "pkukielka",
          "name" : null,
          "avatarUrl" : null,
          "url" : null
        },
        "body" : "You can put everything inside \r\n```\r\ns\"\"\"\r\n\"\"\"\r\n```\r\nThis way you won't have to escape `\"` and you won't have to concatenate strings, as you can access variables using `${repository.owner}` etc.",
        "createdAt" : "2020-03-10T10:39:14Z",
        "updatedAt" : null,
        "commit" : "aa6e686a8328839854467529b25b40ec71f21c0b",
        "line" : null,
        "diffHunk" : "@@ -0,0 +1,55 @@\n+package github.web\n+\n+import github.utils.{PRId, Query}\n+\n+object QueryGenerator {\n+\n+  def queryForPullRequestWithNumber(pullRequestNumber: PRId, repository: Repository): Query = {\n+    val repositoryIdentifierLine = \" repository(owner:\\\\\\\"\" + repository.owner + \"\\\\\\\", name: \\\\\\\"\" + repository.name + \"\\\\\\\") {\""
      }
    ]
  },
  {
    "prId" : 13,
    "comments" : [
      {
        "author" : {
          "login" : "pkukielka",
          "name" : null,
          "avatarUrl" : null,
          "url" : null
        },
        "body" : "Is that needed / does it work?\r\nI already see `query {` in the query string.",
        "createdAt" : "2020-03-13T13:05:30Z",
        "updatedAt" : null,
        "commit" : "aa6e686a8328839854467529b25b40ec71f21c0b",
        "line" : null,
        "diffHunk" : "@@ -0,0 +1,56 @@\n+package github.web\n+\n+import github.utils._\n+\n+object QueryGenerator {\n+\n+  def queryForPullRequestWithNumber(pullRequestNumber: PRId, repository: GithubRepository): Query = {\n+    val query =\n+    s\"\"\"query {\n+        repository ( owner: \\\\\\\"${repository.owner}\\\\\\\", name: \\\\\\\"${repository.name}\\\\\\\" ) {\n+         pullRequest: issueOrPullRequest(number: ${pullRequestNumber.id}) {\n+      __typename\n+        ... on PullRequest {\n+          reviewThreads(first: 100) {\n+            edges {\n+              node {\n+                comments(first: 100) {\n+                  nodes {\n+                    id\n+                    pullRequest {\n+                      number\n+                      mergeCommit {\n+                        oid\n+                      }\n+                    }\n+                    pullRequestReview {\n+                      id\n+                    }\n+                    commit {\n+                      oid\n+                    }\n+                    replyTo {\n+                      id\n+                    }\n+                    author {\n+                      login\n+                    }\n+                    body\n+                    diffHunk\n+                    createdAt\n+                    path\n+                    position\n+                  }\n+                }\n+              }\n+            }\n+          }\n+        }\n+      }\n+    }\n+  }\"\"\".replace('\\n', ' ')\n+    val queryWrappedToJSON = \"{ \\\"query\\\":\\\" \" + query + \" \\\"}\""
      },
      {
        "author" : {
          "login" : "seleythen",
          "name" : null,
          "avatarUrl" : null,
          "url" : null
        },
        "body" : "Yes, it works. Outer \"query\" is field of JSON, inner is graphql query itself. In other words- there is sent JSON with field query. And value of this filed is graphql query, which contains keyword query also. ",
        "createdAt" : "2020-03-17T08:30:19Z",
        "updatedAt" : null,
        "commit" : "aa6e686a8328839854467529b25b40ec71f21c0b",
        "line" : null,
        "diffHunk" : "@@ -0,0 +1,56 @@\n+package github.web\n+\n+import github.utils._\n+\n+object QueryGenerator {\n+\n+  def queryForPullRequestWithNumber(pullRequestNumber: PRId, repository: GithubRepository): Query = {\n+    val query =\n+    s\"\"\"query {\n+        repository ( owner: \\\\\\\"${repository.owner}\\\\\\\", name: \\\\\\\"${repository.name}\\\\\\\" ) {\n+         pullRequest: issueOrPullRequest(number: ${pullRequestNumber.id}) {\n+      __typename\n+        ... on PullRequest {\n+          reviewThreads(first: 100) {\n+            edges {\n+              node {\n+                comments(first: 100) {\n+                  nodes {\n+                    id\n+                    pullRequest {\n+                      number\n+                      mergeCommit {\n+                        oid\n+                      }\n+                    }\n+                    pullRequestReview {\n+                      id\n+                    }\n+                    commit {\n+                      oid\n+                    }\n+                    replyTo {\n+                      id\n+                    }\n+                    author {\n+                      login\n+                    }\n+                    body\n+                    diffHunk\n+                    createdAt\n+                    path\n+                    position\n+                  }\n+                }\n+              }\n+            }\n+          }\n+        }\n+      }\n+    }\n+  }\"\"\".replace('\\n', ' ')\n+    val queryWrappedToJSON = \"{ \\\"query\\\":\\\" \" + query + \" \\\"}\""
      }
    ]
  }
]