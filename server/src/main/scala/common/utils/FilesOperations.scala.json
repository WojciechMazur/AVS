[
  {
    "prId" : 13,
    "comments" : [
      {
        "author" : {
          "login" : "pkukielka",
          "name" : null,
          "avatarUrl" : null,
          "url" : null
        },
        "body" : "Ideally `close` should be in the `finally { }` block",
        "createdAt" : "2020-03-13T12:06:43Z",
        "updatedAt" : null,
        "commit" : "aa6e686a8328839854467529b25b40ec71f21c0b",
        "line" : null,
        "diffHunk" : "@@ -0,0 +1,14 @@\n+package common.utils\n+\n+import java.io.PrintWriter\n+import java.nio.file.Path\n+\n+object FilesOperations {\n+  def saveTextToFile(fileName: Path, outputDirectory: Path, text: String): Unit = {\n+    val outputFile = outputDirectory.resolve(fileName).toFile\n+    outputFile.getParentFile.mkdirs()\n+    val pw = new PrintWriter(outputFile)\n+    pw.write(text)\n+    pw.close()"
      }
    ]
  },
  {
    "prId" : 13,
    "comments" : [
      {
        "author" : {
          "login" : "pkukielka",
          "name" : null,
          "avatarUrl" : null,
          "url" : null
        },
        "body" : "I would rather return Option[String] to not hide exceptions, but we can live with it for now",
        "createdAt" : "2020-03-18T09:30:44Z",
        "updatedAt" : null,
        "commit" : "aa6e686a8328839854467529b25b40ec71f21c0b",
        "line" : 20,
        "diffHunk" : "@@ -0,0 +1,30 @@\n+package common.utils\n+\n+import java.io.{File, PrintWriter}\n+import java.nio.file.Path\n+\n+import scala.io.Source\n+\n+object FilesOperations {\n+  def saveTextToFile(fileName: Path, outputDirectory: Path, text: String): Unit = {\n+    val outputFile = outputDirectory.resolve(fileName).toFile\n+    outputFile.getParentFile.mkdirs()\n+    val pw = new PrintWriter(outputFile)\n+    try {\n+      pw.write(text)\n+    } finally {\n+      pw.close()\n+    }\n+  }\n+\n+  def readWholeFile(file: File): String = {"
      }
    ]
  }
]