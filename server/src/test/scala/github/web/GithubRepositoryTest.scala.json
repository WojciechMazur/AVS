[
  {
    "prId" : 13,
    "comments" : [
      {
        "author" : {
          "login" : "pkukielka",
          "name" : null,
          "avatarUrl" : null,
          "url" : null
        },
        "body" : "Does it also for for links like `git@github.com:pkukielka/codetale.git`? If so, could we please add a test for that as well?",
        "createdAt" : "2020-03-17T10:05:20Z",
        "updatedAt" : null,
        "commit" : "aa6e686a8328839854467529b25b40ec71f21c0b",
        "line" : 9,
        "diffHunk" : "@@ -0,0 +1,11 @@\n+package github.web\n+\n+import org.scalatest.flatspec.AnyFlatSpec\n+\n+class GithubRepositoryTest extends AnyFlatSpec {\n+  \"GetFromUrl\" should \"properly parse github link\" in {\n+    val link = \"https://github.com/apache/spark\"\n+    val expectedRepository = GithubRepository(\"apache\", \"spark\")\n+    assert(GithubRepository.getFromUrl(link).contains(expectedRepository))"
      },
      {
        "author" : {
          "login" : "seleythen",
          "name" : null,
          "avatarUrl" : null,
          "url" : null
        },
        "body" : "This part is a bit flawed.Â I need to add pasing different types of links. For now it parse only one format- http/s with \".git\" sufix.",
        "createdAt" : "2020-03-17T12:30:24Z",
        "updatedAt" : null,
        "commit" : "aa6e686a8328839854467529b25b40ec71f21c0b",
        "line" : 9,
        "diffHunk" : "@@ -0,0 +1,11 @@\n+package github.web\n+\n+import org.scalatest.flatspec.AnyFlatSpec\n+\n+class GithubRepositoryTest extends AnyFlatSpec {\n+  \"GetFromUrl\" should \"properly parse github link\" in {\n+    val link = \"https://github.com/apache/spark\"\n+    val expectedRepository = GithubRepository(\"apache\", \"spark\")\n+    assert(GithubRepository.getFromUrl(link).contains(expectedRepository))"
      },
      {
        "author" : {
          "login" : "seleythen",
          "name" : null,
          "avatarUrl" : null,
          "url" : null
        },
        "body" : "For now best solution for me is use JGit and lsRemoteRepository to verify if repository exist. But I suppose to postpone this to next PR",
        "createdAt" : "2020-03-17T12:41:32Z",
        "updatedAt" : null,
        "commit" : "aa6e686a8328839854467529b25b40ec71f21c0b",
        "line" : 9,
        "diffHunk" : "@@ -0,0 +1,11 @@\n+package github.web\n+\n+import org.scalatest.flatspec.AnyFlatSpec\n+\n+class GithubRepositoryTest extends AnyFlatSpec {\n+  \"GetFromUrl\" should \"properly parse github link\" in {\n+    val link = \"https://github.com/apache/spark\"\n+    val expectedRepository = GithubRepository(\"apache\", \"spark\")\n+    assert(GithubRepository.getFromUrl(link).contains(expectedRepository))"
      }
    ]
  }
]